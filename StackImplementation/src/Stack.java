public class Stack {
   // Stack ซึ่งเป็นโครงสร้างข้อมูลชนิดหนึ่งที่มีการปฏิบัติตามหลักการของ Last-In-First-Out (LIFO) หรือ "หลักของคนล่าสุดเข้ามา คนแรกออกไป" ที่ใช้ในการจัดการข้อมูลเหมือนกับการจัดแปลงของสแต็ค (Stack) ทางคณิตศาสตร์หรือการจัดการข้อมูลอื่น ๆ ที่มีลักษณะคล้ายคลึงกัน
    int top  = -1;//การประกาศตัวแปร top เพื่อเก็บดัชนีขององค์ประกอบบนสุดของสแต็ค (Stack) โดยกำหนดค่าเริ่มต้นให้เป็น -1 เพื่อระบุว่าสแต็คว่าง.
    int[] stackArray = {0,0,0,0,0,0,0,0,0,0};//การประกาศอาเรย์ stackArray เพื่อเก็บข้อมูลในสแต็ค และกำหนดค่าเริ่มต้นให้ทุกองค์ประกอบในสแต็คมีค่าเป็น 0.
    //constructor
    Stack(){
       top=-1;
    }//คอนสตรักเตอร์ (Constructor) ของคลาส Stack ที่ใช้ในการกำหนดค่าเริ่มต้นของ top เป็น -1 เมื่อสร้างอ็อบเจ็กต์ของคลาส Stack.
    //push ใส่ของเข้าไปที่บนสุด
    void push(int val){//เมทอด push ที่ใช้ในการเพิ่มค่า val เข้าสู่สแต็ค โดยเลื่อน top ขึ้นและกำหนดค่าใน stackArray ที่ดัชนี top ให้เป็นค่า val.
        top++;
        stackArray[top] = val;
    }
    //pop เอาออก
    void pop(){///เมทอด pop ที่ใช้ในการลบข้อมูลที่อยู่บนสุดของสแต็ค โดยแสดงค่าที่ถูกลบ และลบค่านั้นออกจากสแต็คโดยกำหนดค่าใน stackArray ที่ดัชนี top เป็น 0 และลดค่า top ลง.
        System.out.println(stackArray[top]);
        stackArray[top] = 0;
        top--;
    }
    //ดูว่ามีใส่อะไรไปแล้ว
    void peek(){
        System.out.println(stackArray[top]);
    }//เมทอด peek ที่ใช้ในการแสดงค่าที่อยู่บนสุดของสแต็คโดยไม่ลบค่านั้น โดยใช้ค่าที่อยู่ใน stackArray ที่ดัชนี top.
}//โค้ดนี้สร้างคลาส Stack ที่เป็นโครงสร้างข้อมูลชนิดหนึ่งสำหรับการจัดการข้อมูลแบบ Last-In-First-Out (LIFO) และรองรับการเพิ่มข้อมูล (push), การลบข้อมูล (pop), และการดูข้อมูลบนสุดโดยไม่ลบ (peek) ในสแต็ค.








